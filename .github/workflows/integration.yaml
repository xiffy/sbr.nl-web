name: Taxonomy build

on:
  workflow_dispatch:
    inputs:
      branch:
        description: branch name to deploy to (_this_ repo) defaults to 'main'
        default: main
        required: true
      repository:
        description: repository name which triggered this event (taxonomy default 'xiffy/jenv-tax')
        required: true
        default: xiffy/jenv-tax
      taxonomy_name:
        description: Name of the taxonomy package
        required: true
        default: jenv_taxonomy_2024
      message:
        description: Message to use when we commit taxonomy packages to this repository.
        required: false
        default: "Remotely triggerd"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout self
        uses: actions/checkout@v4

      - run: |
          echo ${{ github.actor }} Started an integration run.
          echo They pushed to ${{ github.event.inputs.repository }}
      - run: |
          echo ${{ github.event.inputs.artifact_name }}
          echo ${{ github.event.inputs.branch }}
          echo "the message is: ${{ github.event.inputs.message }}"
          echo run-id: ${{ github.event.inputs.run_id }}
      - run: |
          echo `pwd`

      - name: Download taxonomy repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.repository }}
          path: _tax

      - run: |
          ls -l _tax
      - run: |
          mkdir -p public/taxonomies/${{ github.event.inputs.branch }}

      - name: Create package
        uses: montudor/action-zip@v1
        with: # recursive, archive name and path without extension, what to archive
          args: zip -r public/taxonomies/${{ github.event.inputs.branch }}/${{ github.event.inputs.taxonomy_name }}  _tax/${{ github.event.inputs.taxonomy_name }}

      - run: |
          ls -l public/taxonomies/main

      - id: eplist
        run: |
          EP_LIST=`python scripts/find_entrypoints.py _tax/${{ github.event.inputs.taxonomy_name }}` 
          echo ep_list=$EP_LIST >> $GITHUB_ENV
#      - id: packagelist
#        run: |
#          PACKAGE_LIST=

      - run: |
          echo ${{ env.ep_list }}

      - name: Install Arelle
        run: |
          pip install arelle
          
      - name: Update git
        uses: EndBug/add-and-commit@v9
        with:
          add: public
          default_author: github_actions
          message: "${{ github.event.inputs.message }} [${{ github.actor }} Updated ${{ github.event.inputs.taxonomy_name }}]"
